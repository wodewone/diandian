<script>
    import mpx, { createApp } from '@mpxjs/core'
    import apiProxy from '@mpxjs/api-proxy'
    import fetch from './plugins/fetch'
    import store from '@/store'

    mpx.use(apiProxy, { usePromise: true })

    createApp({
        globalData: {
            userInfo: null
        },

        async login () {
            const res = await fetch.wx('login')
            console.info('wx.login: ', res)
            const { code } = res
            // 发送 res.code 到后台换取 openId, sessionKey, unionId
            const { success, data: { openid, unionid, session_key: sessionKey } } = await fetch.post('/post/wxlogin', { code })
            const id = openid || unionid
            store.commit('setUserOpenId', openid)
            console.info('fetch.wxlogin: ', id)
            if (success) {
                const { success, data, msg } = await fetch.get('/get/token', { id })
                if (success) {
                    wx.setStorageSync('token', data)
                    sessionKey && wx.setStorageSync('sessionKey', sessionKey)
                    store.commit('setLoginState', true)
                } else {
                    store.commit('setLoginState', false)
                    msg && wx.showToast({ title: msg, icon: 'none', duration: 2000 })
                }
            }
        },
        async getSetting () {
            const { authSetting } = await fetch.wx('getSetting')
            console.info('wx.getSetting ', authSetting)
            if (authSetting['scope.userInfo']) {
                const { success, data } = await fetch.get('/get/user')
                success && store.commit('setUserInfo', data)
                // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
                // const userData = await fetch.wx('getUserProfile')
                // const { userInfo, encryptedData, iv } = userData
                // 可以将 res 发送给后台解码出 unionId

                // const sessionKey = wx.getStorageSync('sessionKey')
                // await fetch.post('/post/userinfo', { sessionKey, encryptedData, iv })

                // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
                // 所以此处加入 callback 以防止这种情况
                // if (this.userInfoReadyCallback) {
                //     this.userInfoReadyCallback(userData)
                // }
            } else {
                store.commit('setUserInfo', {})
                // wx.getUserProfile({
                //     desc: '用于展示头像昵称信息',
                //     success (userData) {
                //         console.info('wx.getUserProfile ', userData)
                //         const { userInfo } = userData
                //         this.globalData.userInfo = userInfo
                //         store.commit('setUserInfo', userInfo)
                //         fetch.post('/set/user', userInfo)
                //     }
                // })
            }
        },
        getPathQuery () {
            const { query } = wx.getLaunchOptionsSync()
            const { shareId } = query
            shareId && store.commit('setShareId', shareId)
        },
        async onLaunch () {
        // async onLoad () {
            // 展示本地存储能力
            // const logs = wx.getStorageSync('logs') || []
            // logs.unshift(Date.now())
            // wx.setStorageSync('logs', logs)
            this.getPathQuery()
            // 登录
            await this.login()
            // 获取用户信息
            await this.getSetting()
        }
    })
</script>

<style lang="scss">
    page, view, button, text, textarea, image, video, input {
        box-sizing: border-box;
    }

    page {
        min-height: 100%;
        display: flex;
        background: #f1f1f1 url("./images/body-bg.png");
    }

    page, view {
        display: block;
    }

    button, text, textarea, input {
        color: #3a3636;
        font-size: 14px;
        line-height: 1.5;
        font-weight: normal;
        font-family: robotoregular, PingFang SC, Hiragino Sans GB, Heiti SC, Microsoft YaHei, WenQuanYi Micro Hei, Helvetica, Arial, monospace, serif;
    }

    button[disabled][type] {
        color: rgba(0,0,0,0.2);
        background-color: #f2f2f2;
    }

    /*.page{*/
    /*    display: flex;*/
    /*    flex-direction: column;*/
    /*}*/
    .container {
        flex: 1;
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: start;
        padding-top: 90px;
    }

    .page-header {
        top: 0;
        left: 0;
        z-index: 5;
        height: 90px;
        width: 100%;
        position: fixed;
        background: linear-gradient(0, transparent, #e8ebec, #e8ebec);

        .header-inner {
            width: 100%;
            height: 100%;
            background: url("./images/header.png") no-repeat top left/100% auto;
        }
    }

    .spin-loading {
        background: url("./images/loading.svg") no-repeat center/20px;
    }

    checkbox .wx-checkbox-input {
        width: 20px;
        height: 20px;
        border: none;
        border-radius: 50%;

        &.wx-checkbox-input-checked {
            background: #07c160;

            &:before{
                color: #fff;
            }
        }
    }

</style>

<script type="application/json">
    {
        "pages": [
            "./pages/story/index",
            "./pages/photo/index",
            "./pages/login/index"
        ],
        "tabBar": {
            "list": [
                {
                    "pagePath": "pages/story/index",
                    "text": "Story"
                },
                {
                    "pagePath": "pages/photo/index",
                    "text": "Beauty"
                }
            ]
        },
        "window": {
            "backgroundTextStyle": "light",
            "navigationBarBackgroundColor": "#fff",
            "navigationBarTitleText": "My Dream",
            "navigationBarTextStyle": "black",
            "pageOrientation": "auto",
            "navigationStyle": "custom"
        },
        "style": "v2",
        "useExtendedLib": {
            "kbone": true,
            "weui": true
        },
        "permission": {
            "scope.userLocation": {
                "desc": "你的位置信息将用于计算场地路线"
            }
        }
    }

</script>
