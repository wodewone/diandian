<template xmlns:wx="http://www.w3.org/1999/xhtml">
    <view class="cover-wrap">
        <view class="user-info">
            <view
                wx:key="index"
                wx:for="{{aniCoverList}}"
                bindtap="coverEvent(index)"
                class="cover {{aniIndex === index ? 'flash' : ''}} {{item.name === userInfo.nickName ? 'isme' : ''}}"
            >
                <image class="img" src="{{item.avatarUrl}}" mode="cover"></image>
                <text class="tips">{{item.blessing || '开心每一天，开心开心~'}}</text>
            </view>
        </view>
        <view class="blessing" wx:if="{{userInfo.nickName}}">
            <image class="user-avatar" src="{{userInfo.avatarUrl}}" mode="cover"></image>
            <input class="input" type="text" placeholder="祝福语，最多20个字" maxlength="20" wx:model="{{blessValue}}"/>
            <button class="btn" type="primary" bindtap="send" disabled="{{!blessValue}}">祝福</button>
        </view>
    </view>
</template>

<script>
    import { createComponent } from '@mpxjs/core'
    import fetch from '../../plugins/fetch'

    createComponent({
        properties: {
            userInfo: Object
        },
        data: {
            userMsgList: [],
            aniCoverList: [],
            aniIndex: -1,
            blessValue: null
        },
        computed: {
            mapLocations () {
                if (!this.locationInfo.longitude) {
                    return []
                }
                const { latitude, longitude } = this.mapMarket
                return [...this.locationInfo, latitude, longitude]
            },
            mapMarkets () {
                return [this.mapMarket]
            }
        },
        methods: {
            random (min, max) {
                return Math.floor(Math.random() * (max - min) + min)
            },
            putAniCover () {
                this.aniTimeId = setTimeout(() => {
                    this.aniIndex = this.random(0, this.aniCoverList.length)
                    this.putAniCover()
                }, this.random(2000, 3000))
            },
            getAniCover () {
                return new Promise((resolve) => {
                    // setTimeout(() => {
                    resolve(this.userMsgList.splice(0, 1))
                    // }, 50)
                })
            },
            async setAniCover () {
                if (this.userMsgList.length) {
                    const [item] = await this.getAniCover()
                    item && this.aniCoverList.push(item)
                    this.setAniCover()
                }
            },
            coverEvent (index) {
                this.aniIndex = index
                this.aniTimeId && clearTimeout(this.aniTimeId)
                this.putAniCover()
            },
            async send () {
                const blessing = this.blessValue
                const res = await fetch.post('/set/greeting', { blessing })
                console.info(11221, res)
            },
            async fetchList () {
                const { success, data } = await fetch.get('/get/greetings')
                if (success) {
                    this.userMsgList = data
                    this.setAniCover()
                }
            }
        },
        watch: {
            userInfo (d) {
                console.info(222, d)
            },
            userMsgList (l) {
                !l.length && this.putAniCover()
            }
        },
        ready () {
            this.fetchList()
        }
    })
</script>

<style lang="scss">
    .cover-wrap {
        .blessing {
            display: flex;
            margin-top: 15px;
            align-items: center;

            .user-avatar {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                margin-right: 10px;
            }

            .input {
                flex: 1;
                height: 30px;
                font-size: 12px;
                padding: 5px 10px;
                line-height: 20px;
                border-radius: 2px;
                background: #f5f5f6;
                border: 1px solid #dcdee3;
            }

            .btn {
                width: 60px;
                height: 30px;
                font-size: 12px;
                margin-left: 10px;
                padding: 0 5px;
                line-height: 30px;
            }
        }
    }

    .user-info {
        display: flex;
        flex-wrap: wrap;
        padding: 10px 20px;
        border-radius: 5px;
        background-image: radial-gradient(49% 100%, #3e7880 30%, #214152 100%);
        box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.3), 0 2px 7px rgba(0, 0, 0, 0.8) inset, 0 2px 7px rgba(0, 0, 0, 0.8) inset;

        .cover {
            width: 26px;
            height: 26px;
            min-width: 20px;
            margin: 0 5px 15px;
            border-radius: 50%;
            position: relative;
            background: #eef1e8;
            animation: ani-cover ease-in 1s;

            &.isme {
                border: 1px solid #f00;
            }

            &:before {
                content: '';
                left: 9px;
                bottom: -8px;
                width: 8px;
                height: 2px;
                border-radius: 50%;
                position: absolute;
                background: rgba(0, 0, 0, 0.55);
                transition: transform linear .3s;
                box-shadow: 0 0 2px rgba(#000, 0.4), 0 0 3px rgba(#000, 0.3), 0 0 4px rgba(#000, 0.3);
            }

            .img {
                width: 100%;
                height: 100%;
                border-radius: 50%;
                position: relative;
                transition: transform linear .3s;
                border: 2px solid rgba(#000, 0.6);
                box-shadow: 0 0 3px rgba(#000, 0.5), 0 0 3px rgba(#000, 0.5);
            }

            &.flash {
                &:before {
                    transform: scale(1.5);
                    animation: ani-shadow ease-in 1s;
                }

                .img {
                    z-index: 1;
                    transform: scale(1.2);
                    animation: ani-img ease-in 1s;
                }

                .tips {
                    opacity: 1;
                    bottom: 140%;
                    transition: all linear .3s;
                }
            }
        }

        .tips {
            opacity: 0;
            left: 50%;
            bottom: 100%;
            padding: 5px;
            font-size: 7px;
            background: #fff;
            white-space: nowrap;
            position: absolute;
            border-radius: 5px;
            pointer-events: none;
            transform: translateX(-50%);
            filter: drop-shadow(0 0 2px rgba(#000, .3));

            &:after {
                content: '';
                left: 50%;
                bottom: -8px;
                position: absolute;
                transform: translateX(-50%);
                border: 4px solid transparent;
                border-top-color: #fff;
            }
        }

        .userinfo-avatar {
            width: 60px;
            height: 60px;
            margin: 20px;
            border-radius: 50%;
        }

        .userinfo-nickname {
            color: #aaa;
        }
    }

    @keyframes ani-cover {
        0% {
            transform: scale(0.6)
        }
        80% {
            transform: scale(1.2)
        }
        100% {
            transform: scale(1)
        }
    }

    @keyframes ani-shadow {
        0% {
            transform: scaleX(1)
        }
        60% {
            transform: scaleX(2)
        }
        80% {
            transform: scaleX(1.5)
        }
        100% {
            transform: scaleX(1.5)
        }
    }

    @keyframes ani-img {
        0% {
            transform: scale(1)
        }
        60% {
            transform: scale(1.4)
        }
        80% {
            transform: scale(1.2) rotate(-36deg)
        }
        90% {
            transform: scale(1.2) rotate(36deg)
        }
        100% {
            transform: scale(1.2) rotate(0)
        }
    }
</style>

<script type="application/json">
    {
        "component": true
    }
</script>
