<template>
    <view wx:if="{{upToken}}" class="fix-box">
        <view
            wx:if="{{localList.length}}"
            class="pic-load"
        >
            <view
                wx:key="index"
                wx:for="{{localList}}"
                class="pic-box {{item.success ? 'success' : ''}}"
                wx:style="background-image: url({{item.src}})"
                bindtap="loadEvent(index)"
            >
                <view hidden="{{item.error}}" class="shadow" wx:style="height: {{item.progress}}%"></view>
                <view hidden="{{!item.error}}" class="exists">
                    <text class="text">{{item.error}}</text>
                </view>
            </view>
        </view>
        <view class="btn-groups">
            <button class="btn add" type="primary" bindtap="chooseImages" disabled="{{btnDisabled}}">上传新照片</button>
        </view>
    </view>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import store from '@/store'
import fetch from '@/plugins/fetch'

createComponent({
    properties: {
        imgList: {
            type: Array,
            default: null
        }
    },
    data: {
        btnDisabled: false,
        localList: []
    },
    computed: {
        ...store.mapState([
            'photoData'
        ]),
        upToken () {
            return this.photoData.token
        },
        imgScope () {
            return this.photoData.scope
        }
    },
    methods: {
        loadEvent (index) {
            const item = this.localList[index]
            try {
                item.cancel()
                mpx.delete(this.localList, index)
            } catch (e) {
                console.warn(e)
            }
        },
        getImagePaths (count = 9, sizeType = ['original']) {
            return fetch.wx('chooseImage', { count, sizeType })
        },
        getFileName (filePath = '') {
            const { imgScope, imgList } = this
            if (filePath) {
                const keys = filePath.split('/')
                return `${imgScope}/${keys[keys.length - 1]}`
            } else {
                return `${imgScope}/${imgList.length}`
            }
        },
        uploadFile (file, index) {
            const { upToken: token } = this
            if (!token) {
                return false
            }
            const key = this.getFileName(file)
            const formData = {
                token,
                key
            }
            return new Promise((resolve, reject) => {
                const local = this.localList[index]
                const success = ({ data, statusCode: code }) => {
                    if (code === 200) {
                        const { key, hash, width, height } = JSON.parse(data)
                        mpx.set(local, 'success', true)
                        return resolve({ key, hash, width, height })
                    } else if (code === 614) {
                        mpx.set(local, 'error', '已存在')
                    } else if (code === 403) {
                        mpx.set(local, 'error', '不支持类型')
                    } else if (code === 413) {
                        mpx.set(local, 'error', '文件太大')
                    }
                    return resolve(false)
                }
                const uploadTask = wx.uploadFile({
                    url: 'https://up-z1.qiniup.com',
                    filePath: file,
                    name: 'file',
                    formData: formData,
                    success,
                    fail (res) {
                        reject(res)
                    }
                })
                uploadTask.onProgressUpdate(({ progress }) => {
                    mpx.set(local, 'progress', 100 - progress)
                })
                local.cancel = () => uploadTask.abort()
            })
        },
        async chooseImages () {
            const { tempFilePaths = [] } = await this.getImagePaths()
            if (tempFilePaths.length) {
                const list = await Promise.all(tempFilePaths.map(async (src, index) => {
                    mpx.set(this.localList, index, { src })
                    return this.uploadFile(src, index)
                }))
                const _list = list.filter(i => i)
                if (_list.length) {
                    await fetch.post('/set/photo/add', { list: _list })
                    this.triggerEvent('update', { disabled: false })
                }
            }
        }
    },
    ready () {
    }
})
</script>

<style lang="scss">
.fix-box {
    left: 2vw;
    width: 90vw;
    bottom: 8px;
    position: fixed;
}

.pic-load{
    left: 0;
    width: 100%;
    bottom: 110%;
    display: flex;
    position: absolute;

    .pic-box{
        width: 10%;
        height: 45px;
        display: flex;
        overflow: hidden;
        text-align: center;
        border-radius: 5px;
        align-items: flex-end;
        box-shadow: 0 0 3px rgba(#000, 0.9);
        background: rgba(#000, .8) no-repeat center/100% auto;

        & + .pic-box{
            margin-left: 1.1%;
        }

        &.success{
            width: 0;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .shadow{
            width: 100%;
            height: 100%;
            background: rgba(#000, 0.6);
            transition: height linear .3s;
        }
        .exists{
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(#000, 0.6);

            .text{
                color: #b8b8b8;
                font-size: 10px;
                line-height: 1.2;
            }
        }
    }
    .album{
        width: 100%;
        height: auto;
        min-height: 30px;
        vertical-align: middle;
    }
}

.btn-groups{
    display: flex;

    .btn {
        margin: 0;
        padding-left: 0;
        padding-right: 0;
        font-size: 12px;
        box-shadow: 0 0 5px rgba(#000, 0.5);

        &.add {
            width: 46vw;
        }

        &[disabled] {
            color: rgba(0,0,0,0.2);
            background-color: #f2f2f2;
            box-shadow: 0 0 5px rgba(#000, 0.3);
        }
    }
}
</style>

<script type="application/json">
{
    "component": true
}
</script>
