<template>
    <view class="page">
<!--        <include src="../../components/template/header.wxml"></include>-->
        <view class="container">
<!--            <petal class="petal-bg"></petal>-->
            <waterfall imgList="{{imgList}}" localList="{{localList}}" loading="{{loading}}" class="wrap" bind:update="eventUpdate"></waterfall>
        </view>
        <uploadImg imgList="{{imgList}}" bind:update="eventUpdate"></uploadImg>
    </view>
</template>

<script>
import { createPage } from '@mpxjs/core'
import store from '@/store'
import fetch from '../../plugins/fetch'

createPage({
    data: {
        loading: true,
        imgList: [],
        localList: [],
        latest: false
    },
    methods: {
        eventUpdate (isInit) {
            if (isInit) {
                this.imgList = []
            }
            this.fetchImgList()
        },
        eventUpload ({ detail }) {
            const { disabled = false } = detail
            console.info('eventUpload: ', detail)
            this.btnDisabled = disabled
        },
        async fetchImgList () {
            this.loading = true
            const { imgList } = this
            const limit = 21
            const len = imgList.length
            const offset = len ? len >= limit ? len - 1 : len : null
            // const { hash = null } = imgList[imgList.length - 2] || {}
            const { success, data } = await fetch.get('/get/photo/list', { limit, offset })
            if (success) {
                this.latest = data.length < limit
                data.map((o) => {
                    const { url } = o
                    const item = {
                        ...o,
                        src: url + '?imageView2/2/w/200/q/50'
                    }
                    this.imgList.push(item)
                })
            }
            this.loading = false
        }
    },
    // onReady () {
    onShow () {
        if (!this.imgList.length) {
            this.fetchImgList()
            store.dispatch('getPhotoToken')
        }
    },
    onPullDownRefresh () {
        this.fetchImgList()
        wx.stopPullDownRefresh()
    },
    onReachBottom (...arg) {
        console.info('onReachBottom: ', ...arg)
        if (!this.latest) {
            this.fetchImgList()
        }
    }
})
</script>

<style lang="scss">
    .page{
        padding-bottom: 50px;
    }

    .petal-bg{
        z-index: 999;
    }

    .container{
        min-height: 100%;
    }
</style>

<script type="application/json">
    {
        "usingComponents": {
            "petal": "../../components/petal",
            "uploadImg": "../../components/uploadImg",
            "waterfall": "../../components/waterfall"
        },
        "enablePullDownRefresh": true,
        "navigationBarTitleText": "Welcome!"
    }
</script>
